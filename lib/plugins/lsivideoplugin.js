// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.LSIImagePlugin = (function(_super) {

    __extends(LSIImagePlugin, _super);

    function LSIImagePlugin() {
      return LSIImagePlugin.__super__.constructor.apply(this, arguments);
    }

    LSIImagePlugin.prototype.init = function() {
      var annotation, _i, _len, _ref, _results,
        _this = this;
      this.name = 'LSIImagePlugin';
      annotation = void 0;
      console.info("Initialize LSIImagePlugin");
      _ref = this.lime.annotations;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        annotation = _ref[_i];
        jQuery(annotation).bind("becomeActive", function(e) {
          var widget;
          annotation = e.target;
          if (annotation.resource.value.indexOf("geonames") < 0) {
            widget = _this.lime.allocateWidgetSpace(_this, {
              thumbnail: "img/pic.png",
              title: "" + (annotation.getLabel()) + " Pics"
            });
          }
          if (widget) {
            if (annotation.ldLoaded) {
              widget.html(_this.renderAnnotation(annotation));
              widget.show();
            } else {
              jQuery(annotation).bind("ldloaded", function(e) {
                annotation = e.target;
                widget.html(_this.renderAnnotation(annotation));
                return widget.show();
              });
            }
            widget.element.click(function() {
              _this.lime.player.pause();
              return _this.displayModal(annotation);
            });
          }
          return annotation.widgets[_this.name] = widget;
        });
        _results.push(jQuery(annotation).bind("becomeInactive", function(e) {
          var widget;
          annotation = e.target;
          widget = annotation.widgets[_this.name];
          if (widget) {
            widget.deactivate();
          }
        }));
      }
      return _results;
    };

    LSIImagePlugin.prototype.showDepictionInModalWindow = function(annotation) {
      var lodResource;
      try {
        lodResource = "http://new.devserver.sti2.org:8080/lsi/api/invoke?lod=" + annotation.resource.value + "&mediaType=video&limit=9&ner=yes";
        /*
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Flachau.rdf"  if lodResource.indexOf("Flachau") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Zorbing.rdf"  if lodResource.indexOf("Zorbing") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Canyoning.rdf"  if lodResource.indexOf("Canyoning") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Freeskiing.rdf"  if lodResource.indexOf("Freeskiing") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Mountainbiking.rdf"  if lodResource.indexOf("Mountainbiking") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Rafting.rdf"  if lodResource.indexOf("Rafting") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Sauna.rdf"  if lodResource.indexOf("Sauna") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Skateboarding.rdf"  if lodResource.indexOf("Skateboarding") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Sledding.rdf"  if lodResource.indexOf("Sledding") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Snowboarding.rdf"  if lodResource.indexOf("Snowboarding") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Snowshoe.rdf"  if lodResource.indexOf("Snowshoe") > 0
              lodResource = "http://devserver.sti2.org/connectme/uitests/lime6/LSI/Trampoline.rdf"  if lodResource.indexOf("Trampoline") > 0
        */

        return $.ajax(lodResource, {
          type: 'GET',
          dataType: 'xml',
          success: function(data, textStatus, jqXHR) {
            var i, image, modalContent, result, x,
              _this = this;
            console.log("success " + textStatus);
            x = data.Description;
            result = "<div id=\"listContainer\" style=\"position:relative; float: left; z-index: 10; width:35%; height: 95%; background: white; box-shadow: rgba(85,85,85,0.5) 0px 0px 24px;\" >\n<ul style=\"overflow: hidden; padding-left: 20px; padding-right: 10px;\">";
            i = 0;
            image = " ";
            while (i < 9) {
              image = x[i].about;
              result += "<li style=\"float: left; list-style: none; margin: 0 15px 30px 0;\">\n<a href=\"#\" class=\"lsiLink\">\n<img class=\"lsiLink\" src=\"" + image + "\" alt=\"description\" style=\"width: 80px; height: 70px; border: 3px solid #777\"/>\n</a>\n</li>";
              i++;
            }
            result += "</ul>\n</div>\n<div id=\"displayArea\" style=\"position:relative; float: left; z-index: 1; width: 65%; height:95%; background: #DBDBDB; \">\n<img id=\"bigImage\" src=\"" + image + "\" style=\"display: block; min-height: 300px; max-height: 330px; max-width: 600px; margin-top: 10px; margin-left: auto; margin-right: auto; border: 5px solid white;\"/>\n</div>";
            modalContent = $("#modalContent");
            $(modalContent).append(result);
            return $(".lsiLink").click(function(e) {
              var lsiImageSource;
              e.preventDefault();
              lsiImageSource = $(e.target).attr("src");
              return $("#bigImage").attr("src", lsiImageSource);
            });
          },
          error: function(jqXHR, textStatus, errorThrown) {
            return $(modalContent).append("AJAX Error: " + textStatus);
          }
        });
      } catch (_error) {}
    };

    LSIImagePlugin.prototype.renderAnnotation = function(annotation) {
      var label, labelObj, returnResult,
        _this = this;
      returnResult = "";
      if (annotation) {
        labelObj = _(annotation.entity["rdfs:label"]).detect(function(labelObject) {
          return labelObject['@language'] === _this.lime.options.preferredLanguage;
        });
        label = labelObj['@value'];
        returnResult = "<div class=\"LSIImageWidget\">\n<table style=\"margin:0 auto; width: 100%;\">\n<tr>\n<td>\n<b class=\"utility-text\">" + (annotation.getLabel()) + " Pics </b>\n</td>\n<td>\n<img class=\"utility-icon\" src=\"img/pic.png\" style=\"float: right; width: 25px; height: 25px; \" >\n</td>\n</tr>\n</table>\n</div>";
      }
      return returnResult;
    };

    LSIImagePlugin.prototype.displayModal = function(annotation) {
      var mask, maskHeight, maskWidth, modalcontainer, winH, winW,
        _this = this;
      if (this.lime.player.isFullScreen) {
        modalcontainer = $(".modalwindow");
      } else {
        modalcontainer = $("#modalWindow");
      }
      mask = void 0;
      if (this.lime.player.isFullScreen) {
        mask = $(".mask");
      } else {
        mask = $("#mask");
      }
      $(modalcontainer).css("height", "70%");
      $(modalcontainer).css("max-height", "400px");
      $(modalcontainer).empty();
      $(modalcontainer).append("<a href=\"#\" class=\"close\" role=\"button\"><img src=\"img/close-icon.png\" style=\"width: 22px; height: 22px;\"/></a>");
      $(modalcontainer).append("<div id=\"modalContent\" style=\"height: 95%; width: 100%; position: relative; margin: 0 auto; text-align: center;\">");
      $(modalcontainer).append("</div>");
      maskHeight = $(window).height();
      maskWidth = $(window).width();
      $(mask).css({
        width: maskWidth,
        height: maskHeight
      });
      $(mask).fadeIn(100);
      $(mask).fadeTo("fast", 0.8);
      winH = $(window).height();
      winW = $(window).width();
      $(modalcontainer).css("top", winH / 2 - $(modalcontainer).height() / 2);
      $(modalcontainer).css("left", winW / 2 - $(modalcontainer).width() / 2);
      $(modalcontainer).fadeIn(100);
      $(".close").click(function(e) {
        e.preventDefault();
        $(mask).hide();
        $(modalcontainer).hide();
        return $(modalcontainer).empty();
      });
      $(mask).click(function(e) {
        $(mask).hide();
        $(modalcontainer).hide();
        return $(modalcontainer).empty();
      });
      return $(window).resize(function(e) {
        maskHeight = $(window).height();
        maskWidth = $(window).width();
        $(mask).css({
          width: maskWidth,
          height: maskHeight
        });
        $(mask).fadeIn(100);
        $(mask).fadeTo("fast", 0.8);
        $(modalcontainer).css("top", winH / 2 - $(modalcontainer).height() / 2);
        $(modalcontainer).css("left", winW / 2 - $(modalcontainer).width() / 2);
        return _this.showDepictionInModalWindow(annotation);
      });
    };

    return LSIImagePlugin;

  })(window.LimePlugin);

}).call(this);
